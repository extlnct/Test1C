
// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let currentPageQuestions = null;
let currentPart = 'A';
let currentQuestionIndex = 0;
let selectedAnswer = null;
let shuffledQuestions = {}; // –•—Ä–∞–Ω–∏–º –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –∫–∞–∂–¥–æ–π —á–∞—Å—Ç–∏
let currentShuffledAnswers = []; // –¢–µ–∫—É—â–∏–µ –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
let currCount = 0;
let countA = 0;
let countB = 0;
let countC = 0;
let countD = 0;
let countE = 0;

// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
let questionElement, progressElement, progressPartsElement, checkboxes, labels, nextBtn, feedbackElement, nextBt, startBt;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ (–∞–ª–≥–æ—Ä–∏—Ç–º –§–∏—à–µ—Ä–∞-–ô–µ–π—Ç—Å–∞)
function shuffleArray(array) {
    const newArray = [...array];
    for (let i = newArray.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [newArray[i], newArray[j]] = [newArray[j], newArray[i]];
    }
    return newArray;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ N –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–∑ –º–∞—Å—Å–∏–≤–∞
function selectRandomQuestions(questions, count) {
    // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –º–∞—Å—Å–∏–≤–∞ –≤–æ–ø—Ä–æ—Å–æ–≤
    const questionsCopy = [...questions];
    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã
    const shuffled = shuffleArray(questionsCopy);
    // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ count –≤–æ–ø—Ä–æ—Å–æ–≤
    return shuffled.slice(0, count);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ —á–∞—Å—Ç–∏ (–û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø)
function shuffleQuestionsForPart(partQuestions) {
    // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ 5 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–∑ 10
    const randomQuestions = selectRandomQuestions(partQuestions, 5);

    // –î–ª—è –∫–∞–∂–¥–æ–≥–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
    return randomQuestions.map(question => {
        // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –∏–Ω–¥–µ–∫—Å–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤ [0, 1, 2, 3]
        const answerIndices = question.options.map((_, index) => index);
        // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
        const shuffledIndices = shuffleArray(answerIndices);

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
        const shuffledOptions = shuffledIndices.map(index => question.options[index]);

        // –ù–∞—Ö–æ–¥–∏–º –Ω–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
        const newCorrectAnswer = shuffledIndices.indexOf(question.correctAnswer);

        return {
            ...question,
            options: shuffledOptions,
            correctAnswer: newCorrectAnswer,
            originalCorrectAnswer: question.correctAnswer, // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            shuffleMap: shuffledIndices // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ä—Ç—É –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è
        };
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å—á–µ—Ç—á–∏–∫–æ–≤
function resetCounters() {
    currCount = 0;
    countA = 0;
    countB = 0;
    countC = 0;
    countD = 0;
    countE = 0;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞ —Ç–µ–∫—É—â–µ–π —á–∞—Å—Ç–∏
function incrementPartCounter(isCorrect) {
    if (isCorrect) {
        switch (currentPart) {
            case 'A': countA++; break;
            case 'B': countB++; break;
            case 'C': countC++; break;
            case 'D': countD++; break;
            case 'E': countE++; break;
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–∞
function initTest() {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    const currentPage = window.location.pathname.split('/').pop() || 'index1.html';

    // –ü–æ–ª—É—á–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    currentPageQuestions = questionsByPage[currentPage];

    if (!currentPageQuestions) {
        console.error('–í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã ' + currentPage + ' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        return;
    }

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    resetCounters();

    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –≤—Å–µ—Ö —á–∞—Å—Ç–µ–π
    shuffledQuestions = {};
    for (const part in currentPageQuestions) {
        shuffledQuestions[part] = shuffleQuestionsForPart(currentPageQuestions[part]);
    }

    // –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
    questionElement = document.getElementById('question');
    progressElement = document.querySelector('.progress');
    progressPartsElement = document.querySelector('.progressParts');
    checkboxes = document.querySelectorAll('input[type="checkbox"]');
    labels = document.querySelectorAll('.padding label');
    nextBtn = document.querySelector('.next-btn');
    feedbackElement = document.getElementById('feedback');
    nextBt = document.getElementById('nextTBtn');
    startBt = document.getElementById('startBtn');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã
    if (!questionElement || !progressElement || !progressPartsElement || checkboxes.length === 0 || labels.length === 0 || !nextBtn || !feedbackElement) {
        console.error('–ù–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã –≤ DOM');
        return;
    }

    // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ "–í –Ω–∞—á–∞–ª–æ" –∏ "–°–ª–µ–¥—É—é—â–∏–π —Ç–µ—Å—Ç" –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    if (nextBt) nextBt.style.display = 'none';
    if (startBt) startBt.style.display = 'none';

    showQuestion(currentQuestionIndex);
    setupEventListeners();
}

// –ü–æ–∫–∞–∑–∞—Ç—å –≤–æ–ø—Ä–æ—Å
function showQuestion(index) {
    const questions = shuffledQuestions[currentPart];
    const question = questions[index];

    if (questionElement) {
        questionElement.textContent = question.question;
    }

    if (progressElement) {
        progressElement.textContent = `–í–æ–ø—Ä–æ—Å ${index + 1} –∏–∑ ${questions.length}`;
    }

    if (progressPartsElement) {
        progressPartsElement.textContent = `–ß–∞—Å—Ç—å ${currentPart}`;
    }

    if (labels && labels.length > 0) {
        question.options.forEach((option, optionIndex) => {
            if (labels[optionIndex]) {
                labels[optionIndex].textContent = option;
            }
        });
    }

    resetCheckboxes();
    hideFeedback();
    if (nextBtn) {
        nextBtn.style.display = 'none';
    }
    selectedAnswer = null;
}

// –°–±—Ä–æ—Å —á–µ–∫–±–æ–∫—Å–æ–≤
function resetCheckboxes() {
    if (checkboxes && checkboxes.length > 0) {
        checkboxes.forEach(checkbox => {
            checkbox.checked = false;
            checkbox.disabled = false;
            if (checkbox.parentElement) {
                checkbox.parentElement.classList.remove('correct', 'incorrect');
            }
        });
    }
}

// –°–∫—Ä—ã—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
function hideFeedback() {
    if (feedbackElement) {
        feedbackElement.style.display = 'none';
        feedbackElement.className = 'feedback';
    }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
    if (checkboxes && checkboxes.length > 0) {
        checkboxes.forEach((checkbox, index) => {
            checkbox.addEventListener('change', function () {
                if (this.checked) {
                    checkboxes.forEach((cb, i) => {
                        if (i !== index) {
                            cb.checked = false;
                        }
                    });
                    selectedAnswer = index;
                    checkAnswer();
                } else {
                    selectedAnswer = null;
                }
            });
        });
    }

    if (nextBtn) {
        nextBtn.addEventListener('click', nextQuestion);
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–í –Ω–∞—á–∞–ª–æ" –∏ "–°–ª–µ–¥—É—é—â–∏–π —Ç–µ—Å—Ç"
    if (nextBt) {
        nextBt.addEventListener('click', function () {
            // –õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ç–µ—Å—Ç—É
            const currentPage = window.location.pathname.split('/').pop();
            const pageNumber = parseInt(currentPage.replace('index', '').replace('.html', ''));
            if (pageNumber < 17) {
                window.location.href = `index${pageNumber + 1}.html`;
            }
        });
    }

    if (startBt) {
        startBt.addEventListener('click', function () {
            // –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            window.location.href = 'index.html';
        });
    }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
function checkAnswer() {
    if (selectedAnswer === null) return;

    const questions = shuffledQuestions[currentPart];
    const question = questions[currentQuestionIndex];
    const correctAnswer = question.correctAnswer;
    const isCorrect = selectedAnswer === correctAnswer;

    if (checkboxes && checkboxes.length > 0) {
        checkboxes.forEach(checkbox => {
            checkbox.disabled = true;
        });

        checkboxes.forEach((checkbox, index) => {
            if (checkbox.parentElement) {
                if (index === correctAnswer) {
                    checkbox.parentElement.classList.add('correct');
                } else if (index === selectedAnswer && !isCorrect) {
                    checkbox.parentElement.classList.add('incorrect');
                }
            }
        });
    }

    if (feedbackElement) {
        feedbackElement.innerHTML = isCorrect ?
            "üñ§ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! üñ§" :
            `<img src='heart.png' style='width:12px'> –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! <img src='heart.png' style='width: 12px'>`;
        feedbackElement.className = `feedback ${isCorrect ? 'correct' : 'incorrect'}`;
        feedbackElement.style.display = 'block';
    }

    if (nextBtn) {
        nextBtn.style.display = 'block';
    }

    if (isCorrect) {
        currCount++;
        incrementPartCounter(true); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Ç–µ–∫—É—â–µ–π —á–∞—Å—Ç–∏
    }
}

// –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
function nextQuestion() {
    currentQuestionIndex++;

    if (currentQuestionIndex < shuffledQuestions[currentPart].length) {
        showQuestion(currentQuestionIndex);
    } else {
        goToNextPart();
    }
}

// –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–π —á–∞—Å—Ç–∏
function goToNextPart() {
    const parts = ['A', 'B', 'C', 'D', 'E'];
    const currentIndex = parts.indexOf(currentPart);

    if (currentIndex < parts.length - 1) {
        currentPart = parts[currentIndex + 1];
        currentQuestionIndex = 0;
        showQuestion(currentQuestionIndex);
    } else {
        completeTest();
    }
}

function completeTest() {
    if (questionElement) {
        questionElement.innerHTML = `–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!<br>
        –í—Å–µ–≥–æ: ${currCount} –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –∏–∑ 25<br>
        –ß–∞—Å—Ç—å A: ${countA} –∏–∑ 5<br>
        –ß–∞—Å—Ç—å B: ${countB} –∏–∑ 5<br>
        –ß–∞—Å—Ç—å C: ${countC} –∏–∑ 5<br>
        –ß–∞—Å—Ç—å D: ${countD} –∏–∑ 5<br>
        –ß–∞—Å—Ç—å E: ${countE} –∏–∑ 5`;
    }

    const paddingElements = document.querySelectorAll('.padding');
    if (paddingElements && paddingElements.length > 0) {
        paddingElements.forEach(padding => {
            padding.style.display = 'none';
        });
    }

    if (nextBtn) {
        nextBtn.style.display = 'none';
    }

    if (nextBt) {
        nextBt.style.display = 'block';
    }

    if (startBt) {
        startBt.style.display = 'block';
    }

    if (feedbackElement) {
        feedbackElement.style.display = 'none';
    }

    if (progressPartsElement) {
        progressPartsElement.style.display = 'none';
    }

    if (progressElement) {
        progressElement.textContent = "–í—Å–µ —á–∞—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω—ã";
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', initTest);